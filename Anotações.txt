FOCO!!!!

variáveis:
tipos de variáveis:
var -
let - 
const -

convertendo para inteiro -> parseInt(n)
convertendo para float (número com vírgula) -> parseFloat(n)
quando pode ser qualquer um dos tipos acima, use apenas -> Number(n)
convertendo para string -> String(n)

mostrando variáveis (dois tipos):
msg = "javascript"
text = "Eu curto " + msg || `Eu curto ${msg}`

alert - manda uma mensagem na caixa
confirm - confirmação em ok ou cancel na caixa
prompt - faz uma pergunta na caixa
document.write - escreve na tela

formatando strings:
text.length - tamanho do texto
text.toUpperCase() - texto para letra maiúscula
text.toLowerCase() - texto para letra minúscula

formatando números:
num.toFixed(num) - quantas casas após a vírgula
num.replace(".", ",") - transforma todos os pontos em vírgula
num.toLocaleString("pt-BR", {style: "currency", currency: "BRL"}) - transforma o número em dinheiro de acordo com o país selecionado

operadores:

aritméticos:
+ - adição
- - subtração
* - multiplicação
/ - divisão
% - resto da divisão
** - potência

atribuição:
+=
-=
*=
/=
%=
**=

relacionais:
> = - maior que
< = - menor que 
>= - maior ou igual que 
<= - menor ou igual que 
== - igual a
!= - diferente de

identidade:
5 == 5 - true (igual)
5 == "5" - true (igual)
5 === "5" - false (idênticos)

lógicos:
! - negação
&& - conjunção (e)
|| - disjunção (ou)
ordem: 1° não - 2° e - 3° ou

dom - Document Object Model

selecionando objetos:
document.getElementsByTagName() - por nome
document.getElementById() - por id
document.getElementsByName() - por nome
document.getElementsByClassName() - por classe
document.querySelector(use . para class e # para id)

innerText - texto dentro do objeto
innerHTML - texto e tags dentro do objeto (html inteiro)

eventos com mouse:
mouseenter - quando o mouse entra no objeto
mouseout - quando o mouse sai do objeto
mousemove - quando se move no objeto
mousedown - quando clica no objeto
mouseup - quando clica e solta o click no objeto
click - clique inteiro

eventos por javascript:
normal:
area.addEventListener("click", clicar)
com função:

hora atual do sistema:
var time = new Date()
time.getHours() - horas

var tag = document.createElement("tag") - cria um elemento por javascript
tag.setAttribute("src/name/id/class", "valor") - seta um atributo na tag criada
div.appendChild(tag) - seta a tag em alguma tag do html

arrays:

array vetor -> índice chave -> elemento -> conteúdo valor
num[0] = 2 - cria um valor em um certo índice
num.push(2) - adiciona o valor no fim do array
num.length - comprimento do array (sem parêntese)
num.sort() - coloca todos os elementos em ordem crescente
num.indexOf(2) - retorna o índice que está o número selecionado (caso não ter retornará -1)

printar um número sem os colchetes e vírgula:
for(let i = 0; i <= num.length; i++) {
    console.log(num[i])
}
ou
for(let i in num) {
    console.log(num[i])
}

caso um valor não for passado em um função:
function soma(n1 = 0, n2 = 0) {
    return n1 + n2
}

console.log(soma(2))

num.focus() - foca no objeto como se tivesse clicado

Jquery:

pegar variáveis: $("elemento")

funções:
fadeIn() - fade do início
fadeOut() - fade da saída
slideUp() - faz um slide para cima
slideDown() - faz um slide para baixo
hide() - esconde o elemento
show() - exibe o elemento
empty() - esvazia o conteúdo dentro de algum elemento
text() - modifica o texto no elemento
html() - modifica o texto com html no elemento
prepend() - adiciona um texto com html no elemento no início
append() - adiciona um texto com html no elemento no fim
val() - pega o valor
ready() - ao estar pronto para uso
click() - ao ser clicado
addClass() - adiciona uma classe no elemento
removeClass() - remove uma classe no elemento
toggleClass() - altera a presença de uma classe no elemento
attr() - obtém ou define um valor de um atributo
remove() - remove o elemento
submit() - ao submitar algo

exemplo de estrutura:
$("button").click(function() {
    conteúdo
})

envio de formulário:
$("#meuFormulario").submit(function(event) {
    // Impede o envio padrão do formulário
    event.preventDefault();

    // Obtém os dados do formulário
    var formData = $(this).serialize();

    // Envia os dados via AJAX
    $.ajax({
        type: "POST", // Método de envio
        url: "seu_script_no_servidor.php", // URL do script no servidor
        data: formData, // Dados a serem enviados
        success: function(response) {
            // Ações a serem executadas em caso de sucesso
            console.log("Resposta do servidor:", response);
        },
        error: function(error) {
            // Ações a serem executadas em caso de erro
            console.error("Erro:", error);
        }
    });
});

O evento submit do formulário é interceptado.
Os dados do formulário são serializados usando $(this).serialize().
Em seguida, é feita uma chamada AJAX usando $.ajax(), onde você define o método (type: "POST"), a URL do script no servidor (url: "seu_script_no_servidor.php"), os dados a serem enviados (data: formData), e as ações a serem executadas em caso de sucesso (success) ou erro (error).